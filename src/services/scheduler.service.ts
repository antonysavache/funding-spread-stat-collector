import { Injectable, Logger } from '@nestjs/common';
import { Cron, CronExpression } from '@nestjs/schedule';
import { TradingService } from './trading.service';

@Injectable()
export class SchedulerService {
  private readonly logger = new Logger(SchedulerService.name);

  constructor(private readonly tradingService: TradingService) {}

  @Cron('*/2 * * * *') // –ö–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã
  async handleTradingCron(): Promise<void> {
    this.logger.log('üïê –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ—Ä–≥–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π...');
    
    try {
      await this.tradingService.checkForTradingOpportunities();
    } catch (error) {
      this.logger.error('–û—à–∏–±–∫–∞ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ —Ç–æ—Ä–≥–æ–≤–ª–∏:', error.message);
    }
  }

  @Cron(CronExpression.EVERY_10_MINUTES) // –ö–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  async handleStatsCron(): Promise<void> {
    try {
      const stats = this.tradingService.getTradingStatistics();
      
      if (stats.totalTrades > 0) {
        this.logger.log(`
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–æ—Ä–≥–æ–≤–ª–∏:
–í—Å–µ–≥–æ —Å–¥–µ–ª–æ–∫: ${stats.totalTrades}
–ê–∫—Ç–∏–≤–Ω—ã—Ö: ${stats.activeTrades}
–ü—Ä–∏–±—ã–ª—å–Ω—ã—Ö: ${stats.profitableTrades}/${stats.totalTrades} (${stats.successRate.toFixed(1)}%)
–ü–æ–ª—É—á–µ–Ω–æ —Ñ–∞–Ω–¥–∏–Ω–≥–∞: $${stats.totalFundingReceived.toFixed(2)}
–£–ø–ª–∞—á–µ–Ω–æ –∫–æ–º–∏—Å—Å–∏–π: $${stats.totalCommissionsPaid.toFixed(2)}
–ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å: $${stats.netProfit.toFixed(2)}
–°—Ä–µ–¥–Ω–∏–π —Å–ø—Ä–µ–¥: ${stats.avgSpread.toFixed(4)}%
–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è —É–¥–µ—Ä–∂–∞–Ω–∏—è: ${stats.avgHoldingTime.toFixed(1)} –º–∏–Ω

–ú–∞—Ä–∫–µ—Ç –æ—Ä–¥–µ—Ä–∞: ${stats.marketCommissionStats.totalTrades} —Å–¥–µ–ª–æ–∫, –ø—Ä–∏–±—ã–ª—å: $${stats.marketCommissionStats.netProfit.toFixed(2)}
–õ–∏–º–∏—Ç+–ú–∞—Ä–∫–µ—Ç: ${stats.limitMarketCommissionStats.totalTrades} —Å–¥–µ–ª–æ–∫, –ø—Ä–∏–±—ã–ª—å: $${stats.limitMarketCommissionStats.netProfit.toFixed(2)}
        `);
      }
    } catch (error) {
      this.logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error.message);
    }
  }
}
