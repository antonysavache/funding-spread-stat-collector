import { Injectable, Logger } from '@nestjs/common';
import { google } from 'googleapis';
import { StrategyDecision } from './strategy-allocator.service';
import { FundingStabilityCheck } from '../interfaces/position-monitoring.interface';

@Injectable()
export class GoogleSheetsService {
  private readonly logger = new Logger(GoogleSheetsService.name);
  private sheets: any;
  private readonly spreadsheetId = '1BD3mYqiEEbcadDSqoiyS6rk8M9ZTAbeYsp3OHHV4Lug';
  private readonly enabled = true; // –í–∫–ª—é—á–∞–µ–º Google Sheets –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

  constructor() {
    this.logger.log('üöÄ GoogleSheetsService –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –≤—ã–∑–≤–∞–Ω');
    this.initializeGoogleSheets();
  }

  private async initializeGoogleSheets() {
    this.logger.log('üîß initializeGoogleSheets –º–µ—Ç–æ–¥ –≤—ã–∑–≤–∞–Ω');
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∫–ª—é—á–µ–Ω—ã –ª–∏ Google Sheets
      if (!this.enabled) {
        this.logger.log('üìä Google Sheets –æ—Ç–∫–ª—é—á–µ–Ω—ã');
        return;
      }

      this.logger.log('üîß –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é Google Sheets...');

      // –ü–æ–ª—É—á–∞–µ–º credentials –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
      const credentialsJson = process.env.GOOGLE_SHEETS_CREDENTIALS;
      if (!credentialsJson) {
        this.logger.error('‚ùå GOOGLE_SHEETS_CREDENTIALS –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ .env');
        return;
      }

      this.logger.log('üîë Credentials –Ω–∞–π–¥–µ–Ω—ã, –ø–∞—Ä—Å–∏–º JSON...');
      const credentials = JSON.parse(credentialsJson);
      this.logger.log('‚úÖ JSON —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω');

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google Sheets API —Å credentials –∏–∑ env
      const auth = new google.auth.GoogleAuth({
        credentials: credentials,
        scopes: ['https://www.googleapis.com/auth/spreadsheets'],
      });

      this.sheets = google.sheets({ version: 'v4', auth });
      this.logger.log(`üìä Google Sheets –æ–±—ä–µ–∫—Ç —Å–æ–∑–¥–∞–Ω, spreadsheetId: ${this.spreadsheetId}`);

      this.logger.log('‚úÖ Google Sheets API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ credentials');
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã
      setTimeout(async () => {
        this.logger.log('‚è∞ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...');
        await this.addTestRecord();
      }, 3000); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏

    } catch (error) {
      this.logger.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Google Sheets API:', error.message);
      this.logger.error('‚ùå –ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
    }
  }

  /**
   * –î–æ–±–∞–≤–ª—è–µ—Ç —Ç–æ—Ä–≥–æ–≤—É—é —Å–¥–µ–ª–∫—É –≤ Google Sheets
   */
  async addTradeToSheet(decision: StrategyDecision): Promise<void> {
    if (!this.sheets || !this.spreadsheetId) {
      this.logger.warn('Google Sheets –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø–∏—Å—å —Å–¥–µ–ª–∫–∏');
      return;
    }

    // –ó–ê–ü–ò–°–´–í–ê–ï–ú –¢–û–õ–¨–ö–û –§–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –°–î–ï–õ–ö–ò, –ù–ï –ü–†–û–ü–£–°–ö–ò
    if (decision.action === 'skip') {
      this.logger.log('üîá –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø–∏—Å—å –≤ Google Sheets - —Ä–µ—à–µ–Ω–∏–µ: SKIP');
      return;
    }

    try {
      const timestamp = new Date().toLocaleString('ru-RU');
      const opportunity = decision.selectedOpportunities[0]; // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å

      if (!opportunity) {
        this.logger.warn('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—É');
        return;
      }

      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –∫–æ–ª–æ–Ω–æ–∫
      const values = [
        [
          timestamp,                                           // A: date
          opportunity.strategy === 'rate_arbitrage' ? 'Strategy 1' : 'Strategy 2', // B: strategy
          opportunity.longExchange || 'N/A',                 // C: exchange 1
          opportunity.shortExchange || 'N/A',                // D: exchange 2  
          opportunity.ticker || 'N/A',                       // E: coin
          (opportunity.longFundingRate * 100)?.toFixed(4) + '%' || '0%', // F: funding before 4 min exchange 1
          '', // G: funding before 1 min exchange 1 (–±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏)
          (opportunity.shortFundingRate * 100)?.toFixed(4) + '%' || '0%', // H: funding before 4 min exchange 2
          '', // I: funding before 1 min exchange 2 (–±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏)
          (decision.totalPotentialProfit)?.toFixed(4) || '0', // J: dirty pnl
          (decision.totalCommissions / 2)?.toFixed(4) || '0', // K: commission 1 (–ø–æ–ª–æ–≤–∏–Ω–∞ –æ—Ç –æ–±—â–∏—Ö –∫–æ–º–∏—Å—Å–∏–π)
          (decision.totalCommissions / 2)?.toFixed(4) || '0', // L: commission 2 (–ø–æ–ª–æ–≤–∏–Ω–∞ –æ—Ç –æ–±—â–∏—Ö –∫–æ–º–∏—Å—Å–∏–π)
          (decision.netProfit)?.toFixed(4) || '0'             // M: clean pnl
        ]
      ];

      // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—É (–∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–ª–æ–Ω–∫–∏ A-M)
      const request = {
        spreadsheetId: this.spreadsheetId,
        range: 'A:M', // –ö–æ–ª–æ–Ω–∫–∏ A-M –∫–∞–∫ –≤ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
        valueInputOption: 'RAW',
        insertDataOption: 'INSERT_ROWS',
        resource: {
          values: values
        }
      };

      await this.sheets.spreadsheets.values.append(request);

      this.logger.log(`üìä –†–ï–ê–õ–¨–ù–ê–Ø –°–î–ï–õ–ö–ê –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ Google Sheets: ${opportunity?.ticker} (${decision.action})`);

    } catch (error) {
      this.logger.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ —Å–¥–µ–ª–∫–∏ –≤ Google Sheets:', error.message);
    }
  }

  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–ª–æ–Ω–∫—É "funding before 1 min" –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
   */
  async updateFundingBefore1Min(check: FundingStabilityCheck): Promise<void> {
    if (!this.sheets || !this.spreadsheetId) {
      this.logger.warn('Google Sheets –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ funding before 1 min');
      return;
    }

    try {
      // –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É —Å –Ω—É–∂–Ω—ã–º —Ç–∏–∫–µ—Ä–æ–º –∏ –±–∏—Ä–∂–µ–π
      const response = await this.sheets.spreadsheets.values.get({
        spreadsheetId: this.spreadsheetId,
        range: 'A:M'
      });

      const rows = response.data.values || [];
      
      // –ò—â–µ–º —Å—Ç—Ä–æ–∫—É —Å –Ω—É–∂–Ω—ã–º —Ç–∏–∫–µ—Ä–æ–º (–∫–æ–ª–æ–Ω–∫–∞ E) - –∏–¥–µ–º —Å–Ω–∏–∑—É –≤–≤–µ—Ä—Ö –¥–ª—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–ø–∏—Å–∏
      for (let i = rows.length - 1; i >= 1; i--) { // –ù–∞—á–∏–Ω–∞–µ–º —Å –∫–æ–Ω—Ü–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        const row = rows[i];
        const coin = row[4]; // –ö–æ–ª–æ–Ω–∫–∞ E (coin)
        
        if (coin === check.ticker) {
          // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É G (funding before 1 min)
          const rowNumber = i + 1; // +1 –ø–æ—Ç–æ–º—É —á—Ç–æ –∏–Ω–¥–µ–∫—Å—ã –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å 0, –∞ —Å—Ç—Ä–æ–∫–∏ —Å 1
          
          await this.sheets.spreadsheets.values.update({
            spreadsheetId: this.spreadsheetId,
            range: `G${rowNumber}`,
            valueInputOption: 'RAW',
            resource: {
              values: [[(check.currentFundingRate * 100).toFixed(4) + '%']]
            }
          });

          this.logger.log(`üìä –û–±–Ω–æ–≤–ª–µ–Ω funding before 1 min –¥–ª—è ${check.ticker}: ${(check.currentFundingRate * 100).toFixed(4)}%`);
          break;
        }
      }

    } catch (error) {
      this.logger.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è funding before 1 min –≤ Google Sheets:', error.message);
    }
  }

  /**
   * –î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã Google Sheets
   */
  async addTestRecord(): Promise<void> {
    this.logger.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫: sheets=${!!this.sheets}, spreadsheetId=${this.spreadsheetId}`);
    
    if (!this.sheets || !this.spreadsheetId) {
      this.logger.warn('Google Sheets –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å');
      this.logger.warn(`–î–µ—Ç–∞–ª–∏: sheets=${!!this.sheets}, spreadsheetId=${this.spreadsheetId}`);
      return;
    }

    try {
      const timestamp = new Date().toLocaleString('ru-RU');
      
      // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
      const values = [
        [
          timestamp,                    // A: date
          'TEST',                       // B: strategy
          'binance',                    // C: exchange 1
          'bybit',                      // D: exchange 2
          'TESTUSDT',                   // E: coin
          '0.2500%',                    // F: funding before 4 min exchange 1
          '0.2450%',                    // G: funding before 1 min exchange 1
          '0.2600%',                    // H: funding before 4 min exchange 2
          '0.2550%',                    // I: funding before 1 min exchange 2
          '2.50',                       // J: dirty pnl
          '0.75',                       // K: commission 1
          '0.70',                       // L: commission 2
          '1.05'                        // M: clean pnl
        ]
      ];

      this.logger.log('üìù –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø–∏—Å–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ Google Sheets...');

      // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
      const request = {
        spreadsheetId: this.spreadsheetId,
        range: 'A:M',
        valueInputOption: 'RAW',
        insertDataOption: 'INSERT_ROWS',
        resource: {
          values: values
        }
      };

      await this.sheets.spreadsheets.values.append(request);

      this.logger.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ Google Sheets —É—Å–ø–µ—à–Ω–æ!');

    } catch (error) {
      this.logger.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞–ø–∏—Å–∏ –≤ Google Sheets:', error.message);
      this.logger.error('‚ùå –ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
    }
  }
}
