import { Injectable, Logger } from '@nestjs/common';
import { SpreadDataService } from './spread-data.service';
import { PositionMonitoring, FundingStabilityCheck } from '../interfaces/position-monitoring.interface';
import { GoogleSheetsService } from './google-sheets.service';

@Injectable()
export class FundingMonitoringService {
  private readonly logger = new Logger(FundingMonitoringService.name);
  private activeMonitoring: Map<string, PositionMonitoring> = new Map();
  private stabilityChecks: FundingStabilityCheck[] = [];

  constructor(
    private readonly spreadDataService: SpreadDataService,
    private readonly googleSheetsService: GoogleSheetsService
  ) {}

  /**
   * –ó–∞–ø—É—Å–∫–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ–∑–∏—Ü–∏–∏ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∑–∞ 1 –º–∏–Ω—É—Ç—É –¥–æ –≤—ã–ø–ª–∞—Ç—ã
   */
  startPositionMonitoring(
    ticker: string,
    exchange: string,
    originalFundingRate: number,
    nextFundingTime: number,
    strategy: 'rate_arbitrage' | 'timing_arbitrage'
  ): string {
    const positionId = `${ticker}_${exchange}_${Date.now()}`;
    const now = Date.now();
    const timeToFunding = nextFundingTime - now;
    const checkTime = timeToFunding - (1 * 60 * 1000); // –ó–∞ 1 –º–∏–Ω—É—Ç—É –¥–æ –≤—ã–ø–ª–∞—Ç—ã

    if (checkTime <= 0) {
      this.logger.warn(`‚ö†Ô∏è –°–ª–∏—à–∫–æ–º –ø–æ–∑–¥–Ω–æ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ ${ticker} –Ω–∞ ${exchange} - –¥–æ –≤—ã–ø–ª–∞—Ç—ã –º–µ–Ω–µ–µ 1 –º–∏–Ω—É—Ç—ã`);
      return positionId;
    }

    const position: PositionMonitoring = {
      id: positionId,
      ticker,
      exchange,
      originalFundingRate,
      nextFundingTime,
      entryTime: now,
      strategy,
      checkScheduled: true
    };

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º setTimeout –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞ 1 –º–∏–Ω—É—Ç—É –¥–æ –≤—ã–ø–ª–∞—Ç—ã
    const timeoutId = setTimeout(() => {
      this.checkFundingStability(positionId);
    }, checkTime);

    position.timeoutId = timeoutId;
    this.activeMonitoring.set(positionId, position);

    this.logger.log(`
üîç –ú–û–ù–ò–¢–û–†–ò–ù–ì –ó–ê–ü–£–©–ï–ù:
Position ID: ${positionId}
–¢–∏–∫–µ—Ä: ${ticker}
–ë–∏—Ä–∂–∞: ${exchange}
–ò—Å—Ö–æ–¥–Ω—ã–π funding rate: ${(originalFundingRate * 100).toFixed(4)}%
–ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑: ${(checkTime / 1000 / 60).toFixed(1)} –º–∏–Ω—É—Ç (–∑–∞ 1 –º–∏–Ω –¥–æ –≤—ã–ø–ª–∞—Ç—ã)
–í—Ä–µ–º—è –≤—ã–ø–ª–∞—Ç—ã: ${new Date(nextFundingTime).toLocaleString('ru-RU')}
    `);

    return positionId;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å funding rate –∑–∞ 1 –º–∏–Ω—É—Ç—É –¥–æ –≤—ã–ø–ª–∞—Ç—ã
   */
  private async checkFundingStability(positionId: string): Promise<void> {
    const position = this.activeMonitoring.get(positionId);
    if (!position) {
      this.logger.error(`–ü–æ–∑–∏—Ü–∏—è ${positionId} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏`);
      return;
    }

    try {
      this.logger.log(`üïê [–ü–†–û–í–ï–†–ö–ê –°–¢–ê–ë–ò–õ–¨–ù–û–°–¢–ò] –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –¥–ª—è ${position.ticker} –Ω–∞ ${position.exchange}...`);

      // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –º–µ—Ç–∫–æ–π —á—Ç–æ —ç—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
      const spreadsData = await this.spreadDataService.fetchSpreadsData();
      const tickerData = spreadsData.find(data => data.ticker === position.ticker);

      if (!tickerData) {
        this.logger.error(`‚ùå [–ü–†–û–í–ï–†–ö–ê –°–¢–ê–ë–ò–õ–¨–ù–û–°–¢–ò] –¢–∏–∫–µ—Ä ${position.ticker} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–∞–Ω–Ω—ã—Ö`);
        this.activeMonitoring.delete(positionId);
        return;
      }

      const exchangeData = tickerData[position.exchange as keyof typeof tickerData] as any;
      if (!exchangeData || exchangeData.fundingRate === null || exchangeData.fundingRate === undefined) {
        this.logger.error(`‚ùå [–ü–†–û–í–ï–†–ö–ê –°–¢–ê–ë–ò–õ–¨–ù–û–°–¢–ò] –î–∞–Ω–Ω—ã–µ –¥–ª—è ${position.exchange} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã`);
        this.activeMonitoring.delete(positionId);
        return;
      }

      const currentFundingRate = exchangeData.fundingRate;
      const changePercent = Math.abs(currentFundingRate - position.originalFundingRate) / Math.abs(position.originalFundingRate) * 100;
      const isStable = changePercent <= 10; // –°—á–∏—Ç–∞–µ–º —Å—Ç–∞–±–∏–ª—å–Ω—ã–º –µ—Å–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ < 10%
      const timeBeforeFunding = (position.nextFundingTime - Date.now()) / 1000 / 60;

      const stabilityCheck: FundingStabilityCheck = {
        positionId,
        ticker: position.ticker,
        exchange: position.exchange,
        originalFundingRate: position.originalFundingRate,
        currentFundingRate,
        changePercent,
        isStable,
        checkTime: new Date(),
        nextFundingTime: new Date(position.nextFundingTime),
        timeBeforeFunding
      };

      this.stabilityChecks.push(stabilityCheck);

      // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ Google Sheets
      await this.googleSheetsService.addStabilityCheckToSheet(stabilityCheck);

      // –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å —á–µ—Ç–∫–æ–π –º–µ—Ç–∫–æ–π
      this.logger.log(`
üîç [–†–ï–ó–£–õ–¨–¢–ê–¢ –ü–†–û–í–ï–†–ö–ò –°–¢–ê–ë–ò–õ–¨–ù–û–°–¢–ò]:
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
Position ID: ${positionId}
–¢–∏–∫–µ—Ä: ${position.ticker}
–ë–∏—Ä–∂–∞: ${position.exchange}
–ò—Å—Ö–æ–¥–Ω—ã–π funding rate: ${(position.originalFundingRate * 100).toFixed(4)}%
–¢–µ–∫—É—â–∏–π funding rate: ${(currentFundingRate * 100).toFixed(4)}%
–ò–∑–º–µ–Ω–µ–Ω–∏–µ: ${changePercent.toFixed(2)}%
–°—Ç–∞—Ç—É—Å: ${isStable ? '‚úÖ –°–¢–ê–ë–ò–õ–¨–ù–´–ô' : '‚ö†Ô∏è –ò–ó–ú–ï–ù–ò–õ–°–Ø'}
–î–æ –≤—ã–ø–ª–∞—Ç—ã: ${timeBeforeFunding.toFixed(1)} –º–∏–Ω—É—Ç
–í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: ${stabilityCheck.checkTime.toLocaleString('ru-RU')}
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
      `);

      // –£–¥–∞–ª—è–µ–º –∏–∑ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
      this.activeMonitoring.delete(positionId);

    } catch (error) {
      this.logger.error(`‚ùå [–ü–†–û–í–ï–†–ö–ê –°–¢–ê–ë–ò–õ–¨–ù–û–°–¢–ò] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ ${positionId}:`, error.message);
      this.activeMonitoring.delete(positionId);
    }
  }

  /**
   * –û—Ç–º–µ–Ω—è–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ–∑–∏—Ü–∏–∏
   */
  cancelPositionMonitoring(positionId: string): void {
    const position = this.activeMonitoring.get(positionId);
    if (position && position.timeoutId) {
      clearTimeout(position.timeoutId);
      this.activeMonitoring.delete(positionId);
      this.logger.log(`üóëÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ ${positionId} –æ—Ç–º–µ–Ω–µ–Ω`);
    }
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
   */
  getActiveMonitoring(): PositionMonitoring[] {
    return Array.from(this.activeMonitoring.values());
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–æ–≤–µ—Ä–æ–∫ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
   */
  getStabilityChecks(): FundingStabilityCheck[] {
    return [...this.stabilityChecks];
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
   */
  getStabilityStats(): any {
    if (this.stabilityChecks.length === 0) {
      return {
        totalChecks: 0,
        stableCount: 0,
        unstableCount: 0,
        stabilityRate: 0,
        avgChangePercent: 0
      };
    }

    const stableCount = this.stabilityChecks.filter(check => check.isStable).length;
    const avgChangePercent = this.stabilityChecks.reduce((sum, check) => sum + check.changePercent, 0) / this.stabilityChecks.length;

    return {
      totalChecks: this.stabilityChecks.length,
      stableCount,
      unstableCount: this.stabilityChecks.length - stableCount,
      stabilityRate: (stableCount / this.stabilityChecks.length * 100).toFixed(1) + '%',
      avgChangePercent: avgChangePercent.toFixed(2) + '%'
    };
  }

  /**
   * –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ (–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50)
   */
  cleanupOldChecks(): void {
    if (this.stabilityChecks.length > 50) {
      this.stabilityChecks = this.stabilityChecks.slice(-50);
      this.logger.log('üßπ –û—á–∏—â–µ–Ω–∞ –∏—Å—Ç–æ—Ä–∏—è —Å—Ç–∞—Ä—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏');
    }
  }
}
